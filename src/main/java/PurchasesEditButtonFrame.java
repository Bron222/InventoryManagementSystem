package main.java;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author bron2
 */
public class PurchasesEditButtonFrame extends javax.swing.JFrame {

    private int orderId;
    private int orderItemId;
    
    public PurchasesEditButtonFrame(String supplierId, String productId, String quantityOrdered, String unitPrice,
                                        String orderId, String orderItemId) {
        
        initComponents();
        
        //set the fields with the appropriate data
        supplierIdTextField.setText(supplierId);
        productIdTextField.setText(productId);
        quantityOrderedTextField.setText(quantityOrdered);
        unitPriceTextField.setText(unitPrice);
        
        //assign to global variable for querying DB
        this.orderId = Integer.parseInt(orderId);
        this.orderItemId = Integer.parseInt(orderItemId);
    }
    
    /**
     * Creates new form PurchaseEditButtonFrame
     */
    public PurchasesEditButtonFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        headingLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        supplierIdTextField = new javax.swing.JTextField();
        productIdTextField = new javax.swing.JTextField();
        quantityOrderedTextField = new javax.swing.JTextField();
        unitPriceTextField = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        submitChangesButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit a Purchase Order");

        headingLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        headingLabel.setText("Please fill out the boxes below to edit the purchase order.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(headingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jLabel2.setText("Supplier ID:");

        jLabel3.setText("Product ID:");

        jLabel4.setText("Quantity Ordered:");

        jLabel5.setText("Price Per Unit:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(supplierIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityOrderedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unitPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supplierIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(productIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(quantityOrderedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(unitPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        submitChangesButton.setBackground(new java.awt.Color(153, 220, 255));
        submitChangesButton.setText("Submit Changes");
        submitChangesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitChangesButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(submitChangesButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitChangesButton)
                    .addComponent(cancelButton))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(148, 148, 148)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(178, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitChangesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitChangesButtonActionPerformed
        // TODO add your handling code here:
        
        // USER VALIDATION - check to see if all boxes are filled=====================================
        if (supplierIdTextField.getText().strip().isEmpty() || productIdTextField.getText().strip().isEmpty() || 
                quantityOrderedTextField.getText().strip().isEmpty() || unitPriceTextField.getText().strip().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Error: Please fill out all available boxes.");
            return;
        }
        
        // USER VALIDATION - check to see if supplier ID, product ID, quantity ordered are integers=====================
            // since text fields are filled. Place in variables for validating further and strip whitespaces/unicode
        String supplierIdText = supplierIdTextField.getText().strip();
        String productIdText = productIdTextField.getText().strip();
        String quantityOrderedText = quantityOrderedTextField.getText().strip();
        String unitPriceText = unitPriceTextField.getText().strip();
        
        if ( !MainWindow.isAnInteger(supplierIdText) || !MainWindow.isAnInteger(productIdText) || !MainWindow.isAnInteger(quantityOrderedText) ) {
            JOptionPane.showMessageDialog(this, "Error: Supplier ID, Product ID, and Quantity Ordered must be a valid whole number.");
            return;
        }
        
        // assign text input value to an integer variable
        int supplierId = Integer.parseInt(supplierIdText);
        int productId = Integer.parseInt(productIdText);
        int quantityOrdered = Integer.parseInt(quantityOrderedText);
        
        // check if supplier Id, product Id, and quantity ordered are values are less than 1
        if (supplierId <= 0 || productId <= 0 || quantityOrdered <= 0) {
            JOptionPane.showMessageDialog(this, "Error: Supplier ID, Product ID, and Quantity Ordered cannot be zero or less in value.");
            return;
        }
        
        // USER VALIDATION - check if unitPrice is a valid double data type and within appropriate values =========================
        unitPriceText = unitPriceText.replace("$", ""); // remove the dollar sign
        
        if (!MainWindow.isADouble(unitPriceText)) {
            JOptionPane.showMessageDialog(this, "Error: Price Per Unit must be a valid decimal value.");
            return;
        }
        
        // since unitPriceText is a valid double, asssign to double variable
        double unitPrice = Double.parseDouble(unitPriceText);
        
        // check if the unit price is less than 0
        if ( unitPrice < 0 ) {
            JOptionPane.showMessageDialog(this, "Error: Price Per Unit cannot be less than zero.");
            return;
        }
        
        // CONNECT TO THE DB AND UPDATE RECORD ============================================
        try (Connection conn = DatabaseUtil.getConnection()) {
            conn.setAutoCommit(false); // Begin transaction

            // ========== VALIDATE PRODUCT EXISTS ==========
            String productCheckSQL = "SELECT COUNT(*) FROM products WHERE product_id = ?";
            PreparedStatement productCheckStmt = conn.prepareStatement(productCheckSQL);
            productCheckStmt.setInt(1, productId);
            ResultSet productRs = productCheckStmt.executeQuery();
            if (productRs.next() && productRs.getInt(1) == 0) {
                JOptionPane.showMessageDialog(this, "Error: Product ID does not exist.");
                return;
            }

            // ========== VALIDATE SUPPLIER EXISTS ==========
            String supplierCheckSQL = "SELECT COUNT(*) FROM suppliers WHERE supplier_id = ?";
            PreparedStatement supplierCheckStmt = conn.prepareStatement(supplierCheckSQL);
            supplierCheckStmt.setInt(1, supplierId);
            ResultSet supplierRs = supplierCheckStmt.executeQuery();
            if (supplierRs.next() && supplierRs.getInt(1) == 0) {
                JOptionPane.showMessageDialog(this, "Error: Supplier ID does not exist.");
                return;
            }

            // Get the old quantity for rollback of stock quantity
            String getOldQtySQL = "SELECT product_id, quantity FROM purchaseorderitems WHERE order_items_id = ?";
            PreparedStatement oldQtyStmt = conn.prepareStatement(getOldQtySQL);
            oldQtyStmt.setInt(1, orderItemId);
            ResultSet rs = oldQtyStmt.executeQuery();

            int oldQuantity = 0;
            int oldProductId = 0;
            if (rs.next()) {
                oldProductId = rs.getInt("product_id");
                oldQuantity = rs.getInt("quantity");
            }

            // Revert old stock quantity from previous product
            String revertStockSQL = "UPDATE products SET stock_quantity = stock_quantity - ? WHERE product_id = ?";
            PreparedStatement revertStockStmt = conn.prepareStatement(revertStockSQL);
            revertStockStmt.setInt(1, oldQuantity);
            revertStockStmt.setInt(2, oldProductId);
            revertStockStmt.executeUpdate();

            // Update the PurchaseOrderItems with new quantity and unit_price
            String updateItemSQL = "UPDATE purchaseorderitems SET product_id = ?, quantity = ?, unit_price = ? WHERE order_items_id = ?";
            PreparedStatement updateItemStmt = conn.prepareStatement(updateItemSQL);
            updateItemStmt.setInt(1, productId);
            updateItemStmt.setInt(2, quantityOrdered);
            updateItemStmt.setDouble(3, unitPrice);
            updateItemStmt.setInt(4, orderItemId);
            updateItemStmt.executeUpdate();

            // Add new stock quantity to new product
            String applyStockSQL = "UPDATE products SET stock_quantity = stock_quantity + ? WHERE product_id = ?";
            PreparedStatement applyStockStmt = conn.prepareStatement(applyStockSQL);
            applyStockStmt.setInt(1, quantityOrdered);
            applyStockStmt.setInt(2, productId);
            applyStockStmt.executeUpdate();

            // Update the supplier_id if needed
            String updateSupplierSQL = "UPDATE purchaseorders SET supplier_id = ? WHERE order_id = ?";
            PreparedStatement updateSupplierStmt = conn.prepareStatement(updateSupplierSQL);
            updateSupplierStmt.setInt(1, supplierId);
            updateSupplierStmt.setInt(2, orderId);
            updateSupplierStmt.executeUpdate();

            // Recalculate and update the total_amount
            String totalSQL = "SELECT SUM(quantity * unit_price) AS total FROM purchaseorderitems WHERE order_id = ?";
            PreparedStatement totalStmt = conn.prepareStatement(totalSQL);
            totalStmt.setInt(1, orderId);
            ResultSet totalRs = totalStmt.executeQuery();

            if (totalRs.next()) {
                double newTotal = totalRs.getDouble("total");
                String updateTotalSQL = "UPDATE purchaseorders SET total_amount = ? WHERE order_id = ?";
                PreparedStatement updateTotalStmt = conn.prepareStatement(updateTotalSQL);
                updateTotalStmt.setDouble(1, newTotal);
                updateTotalStmt.setInt(2, orderId);
                updateTotalStmt.executeUpdate();
            }

            conn.commit(); // Finalize
            JOptionPane.showMessageDialog(this, "Purchase order updated successfully. Please refresh.");
            this.dispose();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage());
        }
    }//GEN-LAST:event_submitChangesButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchasesEditButtonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchasesEditButtonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchasesEditButtonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchasesEditButtonFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchasesEditButtonFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField productIdTextField;
    private javax.swing.JTextField quantityOrderedTextField;
    private javax.swing.JButton submitChangesButton;
    private javax.swing.JTextField supplierIdTextField;
    private javax.swing.JTextField unitPriceTextField;
    // End of variables declaration//GEN-END:variables
}
